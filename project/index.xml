<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects | Shihui Song</title>
    <link>https://songshsongsh.github.io/project/</link>
      <atom:link href="https://songshsongsh.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 02 Sep 2020 18:15:20 +0800</lastBuildDate>
    <image>
      <url>https://songshsongsh.github.io/images/icon_hufa79cd30ae2be8d17fceb39ff9696ace_10943_512x512_fill_lanczos_center_2.png</url>
      <title>Projects</title>
      <link>https://songshsongsh.github.io/project/</link>
    </image>
    
    <item>
      <title>Research on Inductive Rumor Detection in Large Graphs via Centrality Measures</title>
      <link>https://songshsongsh.github.io/project/rumor/</link>
      <pubDate>Wed, 02 Sep 2020 18:15:20 +0800</pubDate>
      <guid>https://songshsongsh.github.io/project/rumor/</guid>
      <description>&lt;p&gt;Recently, fake news spread quickly on the Internet, especially on social media. In order to identify rumor precisely, we would like to study rumor detection on twitter and weibo based on the Graph Convolutional Network model, which could perfectly match with social network structure. By using semi-supervised learning, our model also performs well in early rumor detection.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We applied semi-supervised learning on rumor detection by selecting Opinion Leaders through Katz measures and labeling those leaders, realizing early rumor detectionsemi-supervised learning. We trained all labeled and unlabeled data via Graph Convolutional Network models to improve explainability and rationality.&lt;/li&gt;
&lt;li&gt;We plan to use three real world datasets for training and finish a paper in September.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Research on Path-enhanced Explainable Recommendation with Knowledge Graphs</title>
      <link>https://songshsongsh.github.io/project/pern/</link>
      <pubDate>Wed, 02 Sep 2020 18:15:13 +0800</pubDate>
      <guid>https://songshsongsh.github.io/project/pern/</guid>
      <description>&lt;p&gt;Recommender system helps us to obtain information/products that interest us more. Knowledge Graph (KG), composed of countless triples, is a wellstructured data form and has already used in recommendersystem, question answering, etc.






  



  
  











&lt;figure id=&#34;figure-what-is-knowledge-graph&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/pern/graph_hudcd4931e704538ab1585053b5104f0cc_58332_2000x2000_fit_q90_lanczos.jpg&#34; data-caption=&#34;What is Knowledge Graph?&#34;&gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/pern/graph_hudcd4931e704538ab1585053b5104f0cc_58332_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1148&#34; height=&#34;810&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    What is Knowledge Graph?
  &lt;/figcaption&gt;


&lt;/figure&gt;

However, existing knowledge graph-based recommendation methods have several limitations. User-item path sets show poor explainablity and accuracy expecially in cold-start issuses. Therefore, we propose a novel model named Path-enhanced Recurrent Network (PeRN). Specifically, PeRN integrates a recurrent neural network encoder with a meta-path-based entropy encoder to further increase explainability, accuracy and reduce cold-start costs.&lt;/p&gt;
&lt;p&gt;Recurrent network encoder could represent sequential path semantics in knowledge graph.






  



  
  











&lt;figure id=&#34;figure-recurrent-neural-network-encoder&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/pern/network_hua2592a60735ea5a66ba03a721c66c40f_67785_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Recurrent Neural Network Encoder&#34;&gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/pern/network_hua2592a60735ea5a66ba03a721c66c40f_67785_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;570&#34; height=&#34;503&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Recurrent Neural Network Encoder
  &lt;/figcaption&gt;


&lt;/figure&gt;

Entropy encoder is an efficient approach, which gather meta path information to differentiate paths in one user-item interaction. We also propose a path extraction algorithm with a bidirectional scheme,which is proposed to make PeRN more feasible. 






  



  
  











&lt;figure id=&#34;figure-extract-path&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/pern/path_hu5b6978365dcf64af65a1e5c148c5be5b_97103_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Extract Path&#34;&gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/pern/path_hu5b6978365dcf64af65a1e5c148c5be5b_97103_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;970&#34; height=&#34;358&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Extract Path
  &lt;/figcaption&gt;


&lt;/figure&gt;







  



  
  











&lt;figure id=&#34;figure-meta-path&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/pern/metapath_hu099acead359a7c64c42858c0ff3f8f40_45476_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Meta Path&#34;&gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/pern/metapath_hu099acead359a7c64c42858c0ff3f8f40_45476_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;924&#34; height=&#34;286&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Meta Path
  &lt;/figcaption&gt;


&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;progress&#34;&gt;Progress&lt;/h2&gt;
&lt;p&gt;Now under revision. Early rejected by &lt;em&gt;IJCAI 2020&lt;/em&gt; with 1a, 1wa, 1wr, 1r and &lt;em&gt;CIKM 2020&lt;/em&gt; with 1wa, 1r, 1wr.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Research on Optimization of Maximum Restricted Path Consistency Algorithm in Constraint Satisfaction Problem (CSP)</title>
      <link>https://songshsongsh.github.io/project/maxrpc/</link>
      <pubDate>Wed, 02 Sep 2020 18:15:05 +0800</pubDate>
      <guid>https://songshsongsh.github.io/project/maxrpc/</guid>
      <description>&lt;p&gt;Constraint satisfaction problem (CSP) is a classical branch of artificial intelligence, and many practical problems can be explained by the constraint satisfaction problems. And finding a PC-support is the main task in CSP. We investigate the maximum restricted path consistency algorithms and find there is a large quantity of useless checks in the process of searching for a PC-support with the most popular algorithm lmaxRPC3rm since lmaxRPC3rm has to examine the whole domain of a variable to ascertain whether a PC-support exists. Then we propose a new data structure to strengthen residual supports and weaken the use of multi directionality. In this way, we could narrow the range of searches.&lt;/p&gt;
&lt;h2 id=&#34;result&#34;&gt;Result&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Strengthen the residual technique and weaken the symmetry in some places to narrow the search range then reduce useless checks&lt;/li&gt;
&lt;li&gt;Conducted experiments on benchmarks which prove lmaxRPCls is much faster in most test cases, and can effectively reduce redundant checks with the highest performance increase by 35%.&lt;/li&gt;
&lt;li&gt;Had a paper published on CAAI2017






  



  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/maxrpc/algorithm1_hu7c8f5f9604e5bad5c17b9d6e26787c9d_34122_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/maxrpc/algorithm1_hu7c8f5f9604e5bad5c17b9d6e26787c9d_34122_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;472&#34; height=&#34;345&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;







  



  
  











&lt;figure id=&#34;figure-the-algorithm-to-reduce-useless-checks&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/maxrpc/algorithm_hu3dee8b93f9e1237188b27b1a3d462d64_37240_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;The Algorithm To Reduce Useless Checks&#34;&gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/maxrpc/algorithm_hu3dee8b93f9e1237188b27b1a3d462d64_37240_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;479&#34; height=&#34;300&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    The Algorithm To Reduce Useless Checks
  &lt;/figcaption&gt;


&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Project of Data Stream Tracking Software for Mobile Applications</title>
      <link>https://songshsongsh.github.io/project/xposed/</link>
      <pubDate>Wed, 02 Sep 2020 18:14:58 +0800</pubDate>
      <guid>https://songshsongsh.github.io/project/xposed/</guid>
      <description>&lt;h2 id=&#34;purpose&#34;&gt;Purpose&lt;/h2&gt;
&lt;p&gt;In the actual development process, some SSL network traffic has security defects due to misconfiguration or code defects. It is difficult to find these problems only by static code audit. While the Xposed framework enables us to trace API functions of the Android system and third-party modules and obtain the parameters of various calls, output, and memory stack. By using the Xposed module, including dynamic tracking and analysis, we can protect our Android system in a more efficient way.&lt;/p&gt;
&lt;h2 id=&#34;result&#34;&gt;Result&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Obtained various parameters, such as output, and memory stack through the Xposed framework&lt;/li&gt;
&lt;li&gt;Realized the dynamic tracking and analyzing for Android system functions and applications&lt;/li&gt;
&lt;li&gt;Used Java swing to develop UI that met the demand of displaying the real-time data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;





  



  
  











&lt;figure id=&#34;figure-dispaly-all-the-information&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/xposed/info_huf680fa83a3588588a6e871db2bd42abc_51068_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Dispaly All The Information&#34;&gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/xposed/info_huf680fa83a3588588a6e871db2bd42abc_51068_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1346&#34; height=&#34;797&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Dispaly All The Information
  &lt;/figcaption&gt;


&lt;/figure&gt;

You can choose a function and strat hook, then you will obtain stack information. You can also import function information. Within the stack information page, you can trace a piece of stack information by double click.






  



  
  











&lt;figure id=&#34;figure-choose-a-function-and-start-to-hook&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/xposed/function_huf98131a12bb7703b147c860f073703b4_44482_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Choose A Function And Start To Hook&#34;&gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/xposed/function_huf98131a12bb7703b147c860f073703b4_44482_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1350&#34; height=&#34;800&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Choose A Function And Start To Hook
  &lt;/figcaption&gt;


&lt;/figure&gt;







  



  
  











&lt;figure id=&#34;figure-trace-stack-information-and-display-it&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://songshsongsh.github.io/project/xposed/stack_hu267ff46a07dcb5c661b8c0e73538f55f_41155_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Trace Stack Information And Display It&#34;&gt;


  &lt;img data-src=&#34;https://songshsongsh.github.io/project/xposed/stack_hu267ff46a07dcb5c661b8c0e73538f55f_41155_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1350&#34; height=&#34;800&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; class=&#34;numbered&#34;&gt;
    Trace Stack Information And Display It
  &lt;/figcaption&gt;


&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
